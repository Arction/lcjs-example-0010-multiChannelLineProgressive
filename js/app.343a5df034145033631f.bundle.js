(self.webpackChunk=self.webpackChunk||[]).push([[524],{44:(e,t,n)=>{const a=n(89),s=n(863),{createProgressiveFunctionGenerator:o}=s,{lightningChart:i,SolidFill:r,SolidLine:l,AxisScrollStrategies:h,AxisTickStrategies:c,ColorRGBA:m,emptyFill:d,Themes:g}=a,u=i().ChartXY({theme:g[new URLSearchParams(window.location.search).get("theme")||"darkGold"]||void 0}).setTitle("Multi-channel real-time monitoring (10 chs, 1000 Hz)"),f=(u.getDefaultAxisX().setScrollStrategy(h.progressive).setDefaultInterval((e=>({end:e.dataMax,start:(e.dataMax??0)-3e4,stopAxisAfter:!1}))).setTitle("Data points per channel"),u.getDefaultAxisY().setTickStrategy(c.Empty).setTitle("< Channels >").setScrollStrategy(h.expansion).setInterval({start:-1,end:20,stopAxisAfter:!1}),new Array(10).fill(0).map(((e,t)=>{const n=u.addPointLineAreaSeries({dataPattern:"ProgressiveX"}).setName(`Channel ${t+1}`).setAreaFillStyle(d).setStrokeStyle((e=>e.setThickness(-1))).setMouseInteractions(!1).setMaxSampleCount(3e4);return u.getDefaultAxisY().addCustomTick().setValue(2*(10-(1+t))).setTextFormatter((()=>`Channel ${t+1}`)).setGridStrokeStyle(new l({thickness:1,fillStyle:new r({color:m(255,255,255,60)})})),n})));u.addLegendBox().add(u).setAutoDispose({type:"max-width",maxWidth:.3});const p=[{length:200*Math.PI,func:e=>Math.sin(e/100)},{length:200*Math.PI,func:e=>Math.cos(e/100)},{length:400*Math.PI,func:e=>Math.cos(e/200)+Math.sin(e/100)},{length:400*Math.PI,func:e=>Math.sin(e/50)+Math.cos(e/200)},{length:400*Math.PI,func:e=>Math.sin(e/100)*Math.cos(e/200)},{length:900*Math.PI,func:e=>Math.cos(e/450)},{length:1600*Math.PI,func:e=>Math.sin(e/800)},{length:1300*Math.PI,func:e=>Math.sin(e/200)*Math.cos(e/650)}];Promise.all(p.map((e=>o().setStart(0).setEnd(e.length).setStep(1).setSamplingFunction(e.func).generate().toPromise().then((e=>e.map((e=>e.y))))))).then((e=>{let t=window.performance.now(),n=0;const a=()=>{const s=window.performance.now(),o=Math.floor(1e3*(s-t)/1e3),i=Math.min(o-n,1e3),r=[];for(let t=0;t<f.length;t++){const a=e[t%e.length],s=[];for(let e=0;e<i;e++){const o={x:1*(n+e),y:2*(9-t)+a[(n+e)%a.length]};s.push(o)}r[t]=s}f.forEach(((e,t)=>e.appendJSON(r[t]))),n+=i,requestAnimationFrame(a)};a()}));let M=window.performance.now(),w=0,S=0;const x=u.getTitle(),A=()=>{w++;const e=window.performance.now();S=1e3/((e-M)/w),P=requestAnimationFrame(A),u.setTitle(`${x} (FPS: ${S.toFixed(1)})`)};let P=requestAnimationFrame(A);setInterval((()=>{M=window.performance.now(),w=0}),5e3)}},e=>{e.O(0,[502],(()=>(44,e(e.s=44)))),e.O()}]);